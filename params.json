{"name":"Autodeploy","tagline":"Building an automated deployment system which is similar to AWS CodeDeploy","body":"# AutoDeploy\r\nBuilding an automated deployment system which is similar to AWS CodeDeploy but is hostable inside the enterprise.\r\n\r\nThe target is to minimize the manual prone errors of code deployment.\r\n\r\nThe project will have the following components:\r\n* **Deployment Daemon** (to run under root role so it can restart servers).\r\n* **Deployment Client** (which can communicate with the server giving it the scripts to run).\r\n* **Deployment Interface** (to see the progress and it can be used to deploy certain code versions).\r\n\r\n### Security:\r\n\r\nAll the communcation between the client and the server is secured by RSA Keys, which can be generated by the user.\r\n\r\n\r\n### Configuration.\r\nThe deployment configuration will be based on YAML Format.\r\n\r\nThe client should be callable from CI systems (like Jenkins) to deploy the code after a successful build.\r\n\r\n##Events:##\r\n\r\nThe following events will be handled by the system:\r\n\r\n1. **beforeInstall**: This event will run after the code is downloaded, normal will be used to stop servers/decrypt files\r\n2. **Install**: doing the deployment operation itself (reserved)\r\n3. **afterInstall**: Actions required after Installing like reloading a server.\r\n\r\nEvery event should have the following format:\r\n\r\n```yaml\r\nevents:\r\n   event-name\r\n       - location: script-location\r\n         runas: user-name\r\n  ```\r\n## Requirments ##\r\n### For the Server:\r\n* pyyaml (>3.0)\r\n* pycrypto\r\n\r\n### For the web-application\r\n* django 1.8.1+\r\n* django-table-2\r\n* django-table-report\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}